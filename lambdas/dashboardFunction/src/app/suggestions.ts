import { z, OpenAPIHono, createRoute } from "@hono/zod-openapi";

export const suggestionEndpoint = new OpenAPIHono();

/**
 * The suggestions schema for the dashboard users.
 */
const suggestionsSchema = z.object({
	suggestions: z
		.array(
			z.string().openapi({
				description: "The suggestion for the dashboard users.",
				example: "This is a suggestion.",
			}),
		)
		.max(3)
		.openapi({
			description: "The suggestions.",
			example: [
				"This is a suggestion.",
				"This is another suggestion.",
				"This is a third suggestion.",
			],
		}),
});

/**
 * The query parameters for the suggestions.
 */
const suggestionsParameters = z.object({
	from: z
		.string()
		.datetime({
			message: "Invalid date format. Expected ISO 8601 format.",
		})
		.optional()
		.openapi({
			description:
				"The start date for the suggestions data. This should be in ISO 8601 format.",
			example: "1970-01-01T00:00:00.000Z",
		}),
	to: z
		.string()
		.datetime({
			message: "Invalid date format. Expected ISO 8601 format.",
		})
		.optional()
		.openapi({
			description:
				"The end date for the suggestions data. This should be in ISO 8601 format.",
			example: "1970-01-01T00:00:00.000Z",
		}),
});

const route = createRoute({
	method: "get",
	path: "/",
	request: {
		query: suggestionsParameters,
	},
	responses: {
		200: {
			description:
				"The suggestions for the dashboard users. These suggestions are generated by the AI model. So, it can be long time to get the suggestions.",
			content: {
				"application/json": {
					schema: suggestionsSchema,
				},
			},
		},
		400: {
			description: "Bad Request",
			content: {
				"application/json": {
					schema: z.object({
						message: z.string(),
					}),
				},
			},
		},
		500: {
			description: "Internal Server Error",
			content: {
				"application/json": {
					schema: z.object({
						message: z.string(),
					}),
				},
			},
		},
	},
});

suggestionEndpoint.openapi(route, (c) => {
	const { from, to } = c.req.valid("query");
	return c.json(
		{
			suggestions: [
				"This is a suggestion.",
				"This is another suggestion.",
				"This is a third suggestion.",
			],
		},
		200,
	);
});
